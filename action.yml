name: 'get deployment freeze'

description: |
  'A deployment-freeze-status tag is defined on AWS resource, to indicate whether the deployment is locked.
    needs:
    - init-job 
    - configure-aws-credentials'

outputs:
  IS_PREPROD_FROZEN:
    description: >-
      whether preprod environement is locked for the deployment
    value: ${{ steps.preprod.outputs.status }}
  IS_PROD_FROZEN:
    description: >-
      whether preprod environement is locked for the deployment
    value: ${{ steps.prod.outputs.status }}
      
runs:
  using: "composite"
  steps:
    - name: retrieve preprod status
      id: preprod
      run: |
        ${{ env.HOST_MODE == 'ecs' }} && && echo "::set-output name=status:: $(aws ecs describe-services --include 'TAGS' --services ${{ env.ECS_TASK }} --cluster ${{ env.CLUSTER-PREFIX }}preprod --query 'services[].tags[?key==`deployment-freeze-status`].value[]' | jq -r '.[]')" || echo "::set-output name=status:: $(aws ec2 describe-instances --region ${{ env.AWS-REGION }} --filters 'Name=tag:Environment,Values=preprod'  'Name=instance-state-name,Values=running' ${{ env.EXTRA-EC2-FILTERS}}  --query 'Reservations[*].Instances[*].InstanceId' | jq  -r '.[]|.[]')" 
      shell: bash
    - name: retrieve prod status
      id: prod
      run: |
        ${{ env.HOST_MODE == 'ec2' }} && echo "::set-output name=status:: $(aws ecs describe-services --include 'TAGS' --services ${{ env.ECS_TASK }} --cluster ${{ env.CLUSTER-PREFIX }}preprod --query 'services[].tags[?key==`deployment-freeze-status`].value[]' | jq -r '.[]')" || echo "::set-output name=status:: $(aws ec2 describe-instances --region ${{ env.AWS-REGION }} --filters 'Name=tag:Environment,Values=preprod'  'Name=instance-state-name,Values=running' ${{ env.EXTRA-EC2-FILTERS}}  --query 'Reservations[*].Instances[*].InstanceId' | jq  -r '.[]|.[]')"
      shell: bash

    #- name: retrieve preprod status
    #  id: preprod
    #  run: |
    #    ${{ env.HOST_MODE == 'ecs' }} \ 
    #      && echo "::set-output name=status:: $(aws ecs describe-services --include 'TAGS' --services ${{ env.ECS_TASK }} --cluster ${{ env.CLUSTER-PREFIX }}preprod --query 'services[].tags[?key==`deployment-freeze-status`].value[]' | jq -r '.[]')" \
    #      || echo "::set-output name=status:: $(aws ec2 describe-instances --region ${{ env.AWS-REGION }} --filters "Name=tag:Environment,Values=preprod"  "Name=instance-state-name,Values=running" ${{ env.EXTRA-EC2-FILTERS}}  --query 'Reservations[*].Instances[*].InstanceId' | jq  -r '.[]|.[]')"
    #  shell: bash

    #- name: retrieve preprod status
    #  id: prod
    #  run: |
    #    ${{ env.HOST_MODE == 'ecs' }} \ 
    #      && echo "::set-output name=status:: $(aws ecs describe-services --include 'TAGS' --services ${{ env.ECS_TASK }} --cluster ${{ env.CLUSTER-PREFIX }}prod --query 'services[].tags[?key==`deployment-freeze-status`].value[]' | jq -r '.[]')" \
    #      || echo "::set-output name=status:: $(aws ec2 describe-instances --region ${{ env.AWS-REGION }} --filters "Name=tag:Environment,Values=prod"  "Name=instance-state-name,Values=running" ${{ env.EXTRA-EC2-FILTERS}}  --query 'Reservations[*].Instances[*].InstanceId' | jq  -r '.[]|.[]')"
    #  shell: bash
