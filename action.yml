name: 'get deployment freeze'

description: |
  'A deployment-freeze-status tag is defined on AWS resource, to indicate whether the deployment is locked.
    needs:
    - init-job 
    - configure-aws-credentials'

inputs:
  github-pat:
    description: >-
      GitHub personal access token
    required: true

outputs:
  IS_PREPROD_FROZEN:
    description: >-
      whether preprod environement is locked for the deployment
    value: ${{ steps.preprod.outputs.status }}
  IS_PROD_FROZEN:
    description: >-
      whether prod environement is locked for the deployment
    value: ${{ steps.prod.outputs.status }}
      
runs:
  using: "composite"
  steps:
    - name: init job  
      uses: myriad-actions/init-job@main
      with:
        github-pat: ${{ inputs.github-pat }}
    - name: Configure AWS credentials 
      uses: aws-actions/configure-aws-credentials@master
      with:
        role-to-assume: ${{ env.AWS-ROLE-TO-ASSUME }}
        aws-region: ${{ env.AWS-REGION }}
    - name: retrieve preprod status
      id: preprod
      run: |
        ${{ env.HOST_MODE == 'ecs' }} && echo "status=$(aws ecs describe-services --include 'TAGS' --services ${{ env.ECS_TASK }} --cluster ${{ env.CLUSTER-PREFIX }}preprod --query 'services[].tags[?key==`deployment-freeze-status`].value[]' | jq -r '.[]')"  >> $GITHUB_OUTPUT || echo "status=$(aws ec2 describe-instances --region ${{ env.AWS-REGION }} --filters 'Name=tag:Environment,Values=preprod'  'Name=instance-state-name,Values=running' 'Name=tag:role,Values=${{ env.ROLE }}' --query 'Reservations[*].Instances[*].Tags' | jq -r '.[]| .[]| .[]| select(.Key=="deployment-freeze-status")|.Value' | uniq | xargs )" >> $GITHUB_OUTPUT         
      shell: bash
    - name: retrieve prod status
      id: prod
      run: |
        ${{ env.HOST_MODE == 'ecs' }} && echo "status=$(aws ecs describe-services --include 'TAGS' --services ${{ env.ECS_TASK }} --cluster ${{ env.CLUSTER-PREFIX }}prod --query 'services[].tags[?key==`deployment-freeze-status`].value[]' | jq -r '.[]')"  >> $GITHUB_OUTPUT  || echo "status=$(aws ec2 describe-instances --region ${{ env.AWS-REGION }} --filters 'Name=tag:Environment,Values=prod'  'Name=instance-state-name,Values=running' 'Name=tag:role,Values=${{ env.ROLE }}' --query 'Reservations[*].Instances[*].Tags' | jq -r '.[]| .[]| .[]| select(.Key=="deployment-freeze-status")|.Value' | uniq | xargs )"  >> $GITHUB_OUTPUT  
      shell: bash
